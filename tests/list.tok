#testmode:repl

# Simple lists made from sequences
(1 2 3)
(1, 2, 3)
(42, "Hello", 23.5, true, false)

# Simple lists by constructor
list(true)
list((1,2,3))
list("Tokay")

# Standard get/set item test
l = (1, 2, 3)
#(
#    l[0]       # 1
#    l[1] = -2  # void
#    ++l[2]     # 4
#    l[3]       # void
#    l[2]       # 4
#)
l[0] l[1] = -2 ++l[2], l[3], l[2]
l

# Extended get/set item test
l = (1, 2, 3)
#(
#    l.get_item(0, 1337)  # 1
#    l.get_item(3, 1337)  # 1337
#    l.set_item(0)        # 1
#    l[1] = void          # void
#    l                    # (2, )
#)
l.get_item(0, 1337) l.get_item(3, 1337) l.set_item(0) l[1] = void
l

# iadd
l = (1,)
l += 2
l += (3, 4)
l

# iadd to itself
a = (1,2)
b = (3,4)
a + b
a
b
a += b
a
b

# add
l = (1,)
l + (2, 3)
l

# len
list().len
().len
(1,).len
(1, 2, 3).len
list_len(5)

# push
l = (1,)
l.push(2)
l.push((3, 4))

list_push((1,2,3), 99, 1)
list_push((1,2,3), 99, 4)

# pop
l = (1,2,3,4); l.pop() l.pop(1)
l = (1,2,3,4)
l.pop(0)
l.pop()
l.pop(2)
l

list_pop(1)
list_pop(1, 1)

# repr
l = ()
l += 1
repr(l)
repr((1, 2, 3, 4))

# flatten
(1, 2, (3, 4)).flatten
(1, 2, (3, 4, (5,))).flatten  # fixme: flatten() should be parametrizeable, and default to 1?

#---

#(1, 2, 3)
#(1, 2, 3)
#(42, "Hello", 23.5, true, false)

#(true, )
#(1, 2, 3)
#("Tokay", )

#(1, 4, 4)
#(1, -2, 4)

#(1, 1337, 1)
#(2, )


#(1, 2, 3, 4)

#(1, 2, 3, 4)
#(1, 2)
#(3, 4)
#(1, 2, 3, 4)
#(3, 4)

#(1, 2, 3)
#(1, )

#0
#0
#1
#3
#1

#(1, 2)
#(1, 2, (3, 4))

#(1, 99, 2, 3)
#ERR:Line 1, column 1: list_push() provided index 4 out of range in list sized 3

#(4, 2)
#1
#4
#ERR:Line 1, column 3: list_pop() provided index 2 out of range of list sized 2
#(2, 3)
#1
#ERR:Line 1, column 1: list_pop() provided index 1 out of range

#"(1, )"
#"(1, 2, 3, 4)"

#(1, 2, 3, 4)
#(1, 2, 3, 4, (5, ))
