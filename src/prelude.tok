# Tokay default prelude

Not : @<P> {
    P reject
    Void
}

Peek : @<P> {
    P reset
}

Expect : @<P> msg=void {
    accept P
    error(msg || "Expecting " + *P + ", but got " + repr((Token | Char | "end-of-file")))
}

Repeat : @<P, min: 1, max: void> {
    res = ()

    loop {
        P {
            res += $1
            if max && res.len == max return res
        }

        if res.len < min reject
        break res
    }
}

Pos : @<P>{ Repeat<P> }
Kle : @<P>{ Repeat<P, min:0> }
Opt : @<P>{ P | Void }

List : @<P, Separator: (',' _), empty: true> {
    Self Separator P   $1 + $3
    if empty (Self Separator)   # allows for trailing Separator
    P  ($1, )
}

Number : Float | Int
Token : Word | Number | AsciiPunctuation
